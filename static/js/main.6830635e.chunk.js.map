{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","toUpperCase","showAlert","toLowerCase","newText","replace","trim","length","split","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6830635e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <>\n      <nav\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n      >\n        <div className=\"container-fluid\">\n          {/* <Link className=\"navbar-brand\" to=\"/\">\n            {props.title}\n          </Link> */}\n          <a className=\"navbar-brand\" href=\"#\">\n            {props.title}\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\n                  Home\n                </Link> */}\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                  Home\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                {/* <Link className=\"nav-link\" to=\"/about\">\n                  {props.aboutText}\n                </Link> */}\n              </li>\n            </ul>\n            {/* <form className=\"d-flex\">\n              <input\n                className=\"form-control me-2\"\n                type=\"search\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n              />\n              <button className=\"btn btn-outline-success\" type=\"submit\">\n                Search\n              </button>\n            </form> */}\n            <div\n              className={`form-check form-switch text-${\n                props.mode === \"light\" ? \"dark\" : \"light\"\n              }`}\n            >\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                id=\"flexSwitchCheckDefault\"\n                onClick={props.toggleMode}\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"flexSwitchCheckDefault\"\n              >\n                Enable DarkMode\n              </label>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n\n// Prop type validation check\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  aboutText: PropTypes.string,\n};\n\n// Default props in case props are not passed\nNavbar.defaultProps = {\n  title: \"Set Title Here\",\n  aboutText: \"About\", // This prop used from default props\n};\n","import React, { useState } from 'react'\n\nexport default function TextForm(props) {\n    var data = null;\n    const [text, setText] = useState('');\n\n    const handleUpClick = () => {\n      setText(text.toUpperCase());\n      text && props.showAlert(\"Converted to UpperCase\", \"success\");\n    };\n\n    const handleLowClick = () => {\n      setText(text.toLowerCase());\n      text && props.showAlert(\"Converted to LowerCase\", \"success\");\n    };\n\n    const handleTrimTextClick = () => {\n      let newText = text.replace(/\\s+/g, \" \").trim();\n      setText(newText);\n    };\n\n    const handleClearTextAreaClick = () => {\n      setText(\"\");\n    };\n\n    const handleOnChange = (event) => {\n      setText(event.target.value);\n    };\n\n    return (\n      <>\n        <div\n          className=\"container\"\n          style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\n        >\n          <h1>{props.heading}</h1>\n          <div className=\"mb-3\">\n            <textarea\n              className=\"form-control\"\n              value={text}\n              onChange={handleOnChange}\n              id=\"myBox\"\n              rows=\"8\"\n              style={{\n                backgroundColor: props.mode === \"dark\" ? \"gray\" : \"white\",\n                color: props.mode === \"dark\" ? \"white\" : \"#042743\",\n              }}\n            ></textarea>\n          </div>\n          <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\n            Convert to Uppercase\n          </button>\n          <button className=\"btn btn-primary mx-1\" onClick={handleLowClick}>\n            Convert to Lowercase\n          </button>\n          <button\n            className=\"btn btn-primary mx-1\"\n            onClick={handleClearTextAreaClick}\n          >\n            Clear Text\n          </button>\n          <button\n            className=\"btn btn-primary mx-1\"\n            onClick={handleTrimTextClick}\n          >\n            Trim Text\n          </button>\n        </div>\n        <div\n          className=\"container my-3\"\n          style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\n        >\n          <h2>Your text summary</h2>\n          <p>\n            {text.length > 0 ? text.split(\" \").length : 0} words and{\" \"}\n            {text.length} characters\n          </p>\n          <p>{text.length > 0 ? 0.008 * text.split(\" \").length : 0} minutes read</p>\n          <h2>Preview</h2>\n          <p>\n            {text.length > 0\n              ? text\n              : \"Enter something in textbox above to preview here\"}\n          </p>\n        </div>\n      </>\n    );\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize = (word) => {\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n\n    return (\n      props.alert && (\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n          <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\n        </div>\n      )\n    );\n}\n\nexport default Alert\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n\n  const toggleMode = () => {\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743';\n      showAlert('Dark mode has been enabled', 'success');\n    } else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode has been enabled', 'success');\n    }\n  }\n\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About\" /> */}\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\"> */}\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Enter the text to analyze below\"\n                mode={mode}\n              />\n            {/* </Route>\n          </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}